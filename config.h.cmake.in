/* Define if building universal (internal helper macro) */
#cmakedefine AC_APPLE_UNIVERSAL_BUILD 1

/* How many MiB of RAM to assume if the real amount cannot be determined. */
#cmakedefine ASSUME_RAM @ASSUME_RAM@

/* Define to 1 if translation of program messages to the user's native
   language is requested. */
#cmakedefine ENABLE_NLS 1

/* Define to 1 if bswap_16 is available. */
#cmakedefine HAVE_BSWAP_16 1

/* Define to 1 if bswap_32 is available. */
#cmakedefine HAVE_BSWAP_32 1

/* Define to 1 if bswap_64 is available. */
#cmakedefine HAVE_BSWAP_64 1

/* Define to 1 if you have the <byteswap.h> header file. */
#cmakedefine HAVE_BYTESWAP_H 1

/* Define to 1 if Capsicum is available. */
#cmakedefine HAVE_CAPSICUM 1

/* Define to 1 if the system has the type `CC_SHA256_CTX'. */
#cmakedefine HAVE_CC_SHA256_CTX 1

/* Define to 1 if you have the `CC_SHA256_Init' function. */
#cmakedefine HAVE_CC_SHA256_INIT 1

/* Define to 1 if you have the Mac OS X function CFLocaleCopyCurrent in the
   CoreFoundation framework. */
#cmakedefine HAVE_CFLOCALECOPYCURRENT 1

/* Define to 1 if you have the Mac OS X function CFPreferencesCopyAppValue in
   the CoreFoundation framework. */
#cmakedefine HAVE_CFPREFERENCESCOPYAPPVALUE 1

/* Define to 1 if crc32 integrity check is enabled. */
#cmakedefine HAVE_CHECK_CRC32 1

/* Define to 1 if crc64 integrity check is enabled. */
#cmakedefine HAVE_CHECK_CRC64 1

/* Define to 1 if sha256 integrity check is enabled. */
#cmakedefine HAVE_CHECK_SHA256 1

/* Define to 1 if you have the `clock_gettime' function. */
#cmakedefine HAVE_CLOCK_GETTIME 1

/* Define to 1 if you have the <CommonCrypto/CommonDigest.h> header file. */
#cmakedefine HAVE_COMMONCRYPTO_COMMONDIGEST_H 1

/* Define if the GNU dcgettext() function is already present or preinstalled.
   */
#cmakedefine HAVE_DCGETTEXT 1

/* Define to 1 if you have the declaration of `CLOCK_MONOTONIC', and to 0 if
   you don't. */
#cmakedefine HAVE_DECL_CLOCK_MONOTONIC 1

/* Define to 1 if you have the declaration of `program_invocation_name', and
   to 0 if you don't. */
#cmakedefine HAVE_DECL_PROGRAM_INVOCATION_NAME 1

/* Define to 1 if any of HAVE_DECODER_foo have been defined. */
#cmakedefine HAVE_DECODERS 1

/* Define to 1 if arm decoder is enabled. */
#cmakedefine HAVE_DECODER_ARM 1

/* Define to 1 if armthumb decoder is enabled. */
#cmakedefine HAVE_DECODER_ARMTHUMB 1

/* Define to 1 if delta decoder is enabled. */
#cmakedefine HAVE_DECODER_DELTA 1

/* Define to 1 if ia64 decoder is enabled. */
#cmakedefine HAVE_DECODER_IA64 1

/* Define to 1 if lzma1 decoder is enabled. */
#cmakedefine HAVE_DECODER_LZMA1 1

/* Define to 1 if lzma2 decoder is enabled. */
#cmakedefine HAVE_DECODER_LZMA2 1

/* Define to 1 if powerpc decoder is enabled. */
#cmakedefine HAVE_DECODER_POWERPC 1

/* Define to 1 if sparc decoder is enabled. */
#cmakedefine HAVE_DECODER_SPARC 1

/* Define to 1 if x86 decoder is enabled. */
#cmakedefine HAVE_DECODER_X86 1

/* Define to 1 if you have the <dlfcn.h> header file. */
#cmakedefine HAVE_DLFCN_H 1

/* Define to 1 if any of HAVE_ENCODER_foo have been defined. */
#cmakedefine HAVE_ENCODERS 1

/* Define to 1 if arm encoder is enabled. */
#cmakedefine HAVE_ENCODER_ARM 1

/* Define to 1 if armthumb encoder is enabled. */
#cmakedefine HAVE_ENCODER_ARMTHUMB 1

/* Define to 1 if delta encoder is enabled. */
#cmakedefine HAVE_ENCODER_DELTA 1

/* Define to 1 if ia64 encoder is enabled. */
#cmakedefine HAVE_ENCODER_IA64 1

/* Define to 1 if lzma1 encoder is enabled. */
#cmakedefine HAVE_ENCODER_LZMA1 1

/* Define to 1 if lzma2 encoder is enabled. */
#cmakedefine HAVE_ENCODER_LZMA2 1

/* Define to 1 if powerpc encoder is enabled. */
#cmakedefine HAVE_ENCODER_POWERPC 1

/* Define to 1 if sparc encoder is enabled. */
#cmakedefine HAVE_ENCODER_SPARC 1

/* Define to 1 if x86 encoder is enabled. */
#cmakedefine HAVE_ENCODER_X86 1

/* Define to 1 if you have the <fcntl.h> header file. */
#cmakedefine HAVE_FCNTL_H 1

/* Define to 1 if you have the `futimens' function. */
#cmakedefine HAVE_FUTIMENS 1

/* Define to 1 if you have the `futimes' function. */
#cmakedefine HAVE_FUTIMES 1

/* Define to 1 if you have the `futimesat' function. */
#cmakedefine HAVE_FUTIMESAT 1

/* Define to 1 if you have the <getopt.h> header file. */
#cmakedefine HAVE_GETOPT_H 1

/* Define to 1 if you have the `getopt_long' function. */
#cmakedefine HAVE_GETOPT_LONG 1

/* Define if the GNU gettext() function is already present or preinstalled. */
#cmakedefine HAVE_GETTEXT 1

/* Define if you have the iconv() function and it works. */
#cmakedefine HAVE_ICONV 1

/* Define to 1 if you have the <immintrin.h> header file. */
#cmakedefine HAVE_IMMINTRIN_H 1

/* Define to 1 if you have the <inttypes.h> header file. */
#cmakedefine HAVE_INTTYPES_H 1

/* Define to 1 if you have the <limits.h> header file. */
#cmakedefine HAVE_LIMITS_H 1

/* Define to 1 if mbrtowc and mbstate_t are properly declared. */
#cmakedefine HAVE_MBRTOWC 1

/* Define to 1 if you have the <memory.h> header file. */
#cmakedefine HAVE_MEMORY_H 1

/* Define to 1 to enable bt2 match finder. */
#cmakedefine HAVE_MF_BT2 1

/* Define to 1 to enable bt3 match finder. */
#cmakedefine HAVE_MF_BT3 1

/* Define to 1 to enable bt4 match finder. */
#cmakedefine HAVE_MF_BT4 1

/* Define to 1 to enable hc3 match finder. */
#cmakedefine HAVE_MF_HC3 1

/* Define to 1 to enable hc4 match finder. */
#cmakedefine HAVE_MF_HC4 1

/* Define to 1 if getopt.h declares extern int optreset. */
#cmakedefine HAVE_OPTRESET 1

/* Define to 1 if you have the `posix_fadvise' function. */
#cmakedefine HAVE_POSIX_FADVISE 1

/* Define to 1 if you have the `pthread_condattr_setclock' function. */
#cmakedefine HAVE_PTHREAD_CONDATTR_SETCLOCK 1

/* Have PTHREAD_PRIO_INHERIT. */
#cmakedefine HAVE_PTHREAD_PRIO_INHERIT 1

/* Define to 1 if you have the `SHA256Init' function. */
#cmakedefine HAVE_SHA256INIT 1

/* Define to 1 if the system has the type `SHA256_CTX'. */
#cmakedefine HAVE_SHA256_CTX 1

/* Define to 1 if you have the <sha256.h> header file. */
#cmakedefine HAVE_SHA256_H 1

/* Define to 1 if you have the `SHA256_Init' function. */
#cmakedefine HAVE_SHA256_INIT 1

/* Define to 1 if the system has the type `SHA2_CTX'. */
#cmakedefine HAVE_SHA2_CTX 1

/* Define to 1 if you have the <sha2.h> header file. */
#cmakedefine HAVE_SHA2_H 1

/* Define to 1 if optimizing for size. */
#cmakedefine HAVE_SMALL 1

/* Define to 1 if stdbool.h conforms to C99. */
#cmakedefine HAVE_STDBOOL_H 1

/* Define to 1 if you have the <stdint.h> header file. */
#cmakedefine HAVE_STDINT_H 1

/* Define to 1 if you have the <stdlib.h> header file. */
#cmakedefine HAVE_STDLIB_H 1

/* Define to 1 if you have the <strings.h> header file. */
#cmakedefine HAVE_STRINGS_H 1

/* Define to 1 if you have the <string.h> header file. */
#cmakedefine HAVE_STRING_H 1

/* Define to 1 if `st_atimensec' is a member of `struct stat'. */
#cmakedefine HAVE_STRUCT_STAT_ST_ATIMENSEC 1

/* Define to 1 if `st_atimespec.tv_nsec' is a member of `struct stat'. */
#cmakedefine HAVE_STRUCT_STAT_ST_ATIMESPEC_TV_NSEC 1

/* Define to 1 if `st_atim.st__tim.tv_nsec' is a member of `struct stat'. */
#cmakedefine HAVE_STRUCT_STAT_ST_ATIM_ST__TIM_TV_NSEC 1

/* Define to 1 if `st_atim.tv_nsec' is a member of `struct stat'. */
#cmakedefine HAVE_STRUCT_STAT_ST_ATIM_TV_NSEC 1

/* Define to 1 if `st_uatime' is a member of `struct stat'. */
#cmakedefine HAVE_STRUCT_STAT_ST_UATIME 1

/* Define to 1 if you have the <sys/byteorder.h> header file. */
#cmakedefine HAVE_SYS_BYTEORDER_H 1

/* Define to 1 if you have the <sys/capsicum.h> header file. */
#cmakedefine HAVE_SYS_CAPSICUM_H 1

/* Define to 1 if you have the <sys/endian.h> header file. */
#cmakedefine HAVE_SYS_ENDIAN_H 1

/* Define to 1 if you have the <sys/param.h> header file. */
#cmakedefine HAVE_SYS_PARAM_H 1

/* Define to 1 if you have the <sys/stat.h> header file. */
#cmakedefine HAVE_SYS_STAT_H 1

/* Define to 1 if you have the <sys/time.h> header file. */
#cmakedefine HAVE_SYS_TIME_H 1

/* Define to 1 if you have the <sys/types.h> header file. */
#cmakedefine HAVE_SYS_TYPES_H 1

/* Define to 1 if the system has the type `uintptr_t'. */
#cmakedefine HAVE_UINTPTR_T 1

/* Define to 1 if you have the <unistd.h> header file. */
#cmakedefine HAVE_UNISTD_H 1

/* Define to 1 if you have the `utime' function. */
#cmakedefine HAVE_UTIME 1

/* Define to 1 if you have the `utimes' function. */
#cmakedefine HAVE_UTIMES 1

/* Define to 1 or 0, depending whether the compiler supports simple visibility
   declarations. */
#cmakedefine HAVE_VISIBILITY 1

/* Define to 1 if you have the `wcwidth' function. */
#cmakedefine HAVE_WCWIDTH 1

/* Define to 1 if the system has the type `_Bool'. */
#cmakedefine HAVE__BOOL 1

/* Define to 1 if you have the `_futime' function. */
#cmakedefine HAVE__FUTIME 1

/* Define to 1 if _mm_movemask_epi8 is available. */
#cmakedefine HAVE__MM_MOVEMASK_EPI8 1

/* Define to the sub-directory where libtool stores uninstalled libraries. */
#cmakedefine LT_OBJDIR @LT_OBJDIR@

/* Define to 1 when using POSIX threads (pthreads). */
#cmakedefine MYTHREAD_POSIX 1

#ifdef _M_IX86
/* Define to 1 when using Windows 95 (and thus XP) compatible threads. This
   avoids use of features that were added in Windows Vista. */
#cmakedefine MYTHREAD_WIN95 1
#else
/* Define to 1 when using Windows Vista compatible threads. This uses features
   that are not available on Windows XP. */
#cmakedefine MYTHREAD_VISTA 1
#endif

/* Define to 1 to disable debugging code. */
#cmakedefine NDEBUG 1

/* Name of package */
#cmakedefine PACKAGE "@PACKAGE@"

/* Define to the address where bug reports for this package should be sent. */
#cmakedefine PACKAGE_BUGREPORT "@PACKAGE_BUGREPORT@"

/* Define to the full name of this package. */
#cmakedefine PACKAGE_NAME "@PACKAGE_NAME@"

/* Define to the full name and version of this package. */
#cmakedefine PACKAGE_STRING "@PACKAGE_STRING@"

/* Define to the one symbol short name of this package. */
#cmakedefine PACKAGE_TARNAME "@PACKAGE_TARNAME@"

/* Define to the home page for this package. */
#cmakedefine PACKAGE_URL "@PACKAGE_URL@"

/* Define to the version of this package. */
#cmakedefine PACKAGE_VERSION "@PACKAGE_VERSION@"

/* Define to necessary symbol if this constant uses a non-standard name on
   your system. */
#cmakedefine PTHREAD_CREATE_JOINABLE @PTHREAD_CREATE_JOINABLE@

/* The size of `size_t', as computed by sizeof. */
#cmakedefine SIZEOF_SIZE_T @SIZEOF_SIZE_T@

/* Define to 1 if you have the ANSI C header files. */
#cmakedefine STDC_HEADERS 1

/* Define to 1 if the number of available CPU cores can be detected with
   cpuset(2). */
#cmakedefine TUKLIB_CPUCORES_CPUSET 1

/* Define to 1 if the number of available CPU cores can be detected with
   pstat_getdynamic(). */
#cmakedefine TUKLIB_CPUCORES_PSTAT_GETDYNAMIC 1

/* Define to 1 if the number of available CPU cores can be detected with
   sched_getaffinity() */
#cmakedefine TUKLIB_CPUCORES_SCHED_GETAFFINITY 1

/* Define to 1 if the number of available CPU cores can be detected with
   sysconf(_SC_NPROCESSORS_ONLN) or sysconf(_SC_NPROC_ONLN). */
#cmakedefine TUKLIB_CPUCORES_SYSCONF 1

/* Define to 1 if the number of available CPU cores can be detected with
   sysctl(). */
#cmakedefine TUKLIB_CPUCORES_SYSCTL 1

/* Define to 1 if the system supports fast unaligned access to 16-bit and
   32-bit integers. */
#cmakedefine TUKLIB_FAST_UNALIGNED_ACCESS 1

/* Define to 1 if the amount of physical memory can be detected with
   _system_configuration.physmem. */
#cmakedefine TUKLIB_PHYSMEM_AIX 1

/* Define to 1 if the amount of physical memory can be detected with
   getinvent_r(). */
#cmakedefine TUKLIB_PHYSMEM_GETINVENT_R 1

/* Define to 1 if the amount of physical memory can be detected with
   getsysinfo(). */
#cmakedefine TUKLIB_PHYSMEM_GETSYSINFO 1

/* Define to 1 if the amount of physical memory can be detected with
   pstat_getstatic(). */
#cmakedefine TUKLIB_PHYSMEM_PSTAT_GETSTATIC 1

/* Define to 1 if the amount of physical memory can be detected with
   sysconf(_SC_PAGESIZE) and sysconf(_SC_PHYS_PAGES). */
#cmakedefine TUKLIB_PHYSMEM_SYSCONF 1

/* Define to 1 if the amount of physical memory can be detected with sysctl().
   */
#cmakedefine TUKLIB_PHYSMEM_SYSCTL 1

/* Define to 1 if the amount of physical memory can be detected with Linux
   sysinfo(). */
#cmakedefine TUKLIB_PHYSMEM_SYSINFO 1

/* Enable extensions on AIX 3, Interix.  */
#ifndef _ALL_SOURCE
#cmakedefine _ALL_SOURCE 1
#endif
/* Enable GNU extensions on systems that have them.  */
#ifndef _GNU_SOURCE
#cmakedefine _GNU_SOURCE 1
#endif
/* Enable threading extensions on Solaris.  */
#ifndef _POSIX_PTHREAD_SEMANTICS
#cmakedefine _POSIX_PTHREAD_SEMANTICS 1
#endif
/* Enable extensions on HP NonStop.  */
#ifndef _TANDEM_SOURCE
#cmakedefine _TANDEM_SOURCE 1
#endif
/* Enable general extensions on Solaris.  */
#ifndef __EXTENSIONS__
#cmakedefine __EXTENSIONS__ 1
#endif


/* Version number of package */
#cmakedefine VERSION "@VERSION@"

/* Define WORDS_BIGENDIAN to 1 if your processor stores words with the most
   significant byte first (like Motorola and SPARC, unlike Intel). */
#if defined AC_APPLE_UNIVERSAL_BUILD
#if defined __BIG_ENDIAN__
#define WORDS_BIGENDIAN 1
#endif
#else
#ifndef WORDS_BIGENDIAN
#cmakedefine WORDS_BIGENDIAN
#endif
#endif

/* Enable large inode numbers on Mac OS X 10.5.  */
#ifndef _DARWIN_USE_64_BIT_INODE
#define _DARWIN_USE_64_BIT_INODE 1
#endif

/* Number of bits in a file offset, on hosts where this is settable. */
#cmakedefine _FILE_OFFSET_BITS @_FILE_OFFSET_BITS@

/* Define for large files, on AIX-style hosts. */
#cmakedefine _LARGE_FILES 1

/* Define to 1 if on MINIX. */
#cmakedefine _MINIX 1

/* Define to 2 if the system does not provide POSIX.1 features except with
   this defined. */
#cmakedefine _POSIX_1_SOURCE 2

/* Define to 1 if you need to in order for `stat' and other things to work. */
#cmakedefine _POSIX_SOURCE 1

/* Define for Solaris 2.5.1 so the uint32_t typedef from <sys/synch.h>,
   <pthread.h>, or <semaphore.h> is not used. If the typedef were allowed, the
   #define below would cause a syntax error. */
#cmakedefine _UINT32_T 1

/* Define for Solaris 2.5.1 so the uint64_t typedef from <sys/synch.h>,
   <pthread.h>, or <semaphore.h> is not used. If the typedef were allowed, the
   #define below would cause a syntax error. */
#cmakedefine _UINT64_T 1

/* Define for Solaris 2.5.1 so the uint8_t typedef from <sys/synch.h>,
   <pthread.h>, or <semaphore.h> is not used. If the typedef were allowed, the
   #define below would cause a syntax error. */
#cmakedefine _UINT8_T 1

/* Define to rpl_ if the getopt replacement functions and variables should be
   used. */
#cmakedefine __GETOPT_PREFIX @__GETOPT_PREFIX@

/* Define to the type of a signed integer type of width exactly 32 bits if
   such a type exists and the standard includes do not define it. */
#cmakedefine int32_t @int32_t@

/* Define to the type of a signed integer type of width exactly 64 bits if
   such a type exists and the standard includes do not define it. */
#cmakedefine int64_t @int64_t@

/* Define to the type of an unsigned integer type of width exactly 16 bits if
   such a type exists and the standard includes do not define it. */
#cmakedefine uint16_t @uint16_t@

/* Define to the type of an unsigned integer type of width exactly 32 bits if
   such a type exists and the standard includes do not define it. */
#cmakedefine uint32_t @uint32_t@

/* Define to the type of an unsigned integer type of width exactly 64 bits if
   such a type exists and the standard includes do not define it. */
#cmakedefine uint64_t @uint64_t@

/* Define to the type of an unsigned integer type of width exactly 8 bits if
   such a type exists and the standard includes do not define it. */
#cmakedefine uint8_t @uint8_t@

/* Define to the type of an unsigned integer type wide enough to hold a
   pointer, if such a type exists, and if the system does not define it. */
#cmakedefine uintptr_t @uintptr_t@
